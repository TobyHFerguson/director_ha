include file("general.conf")

include file("s3.conf")

environmentName: ACIA-PROD-APAAS AWS Environment

# Cloud provider configuration (credentials, region or zone and optional default image)
provider {
    type: aws
    region: eu-west-1
    #accessKeyId: ${AWS_ACCESS_KEY_ID}
    #secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
    subnetId: subnet-01b60958
    securityGroupsIds: "sg-1c8c277a,sg-43b82727,sg-2b3bc34f,sg-ba3cc7de"
    rootVolumeSizeGB: 100
    rootVolumeType: gp2 
    associatePublicIpAddresses: false
    iamProfileName: APaasClouderaProd
}

# SSH credentials to use to connect to the instances
ssh {
    username: ec2-user
    privateKey: /root/.cloudera/APaaS-Prod.pem 
}

common-instance-properties {
    image: ami-a9999999
    rootVolumeSizeGB: 500   # defaults to 50 GB if not specified
    instanceNamePrefix: trng
    enableEbsEncryption: true
    ebsKmsKeyId: "arn:aws:kms:eu-west-1:999999999999:key/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"

    tags {
        OS: Linux
        Role: "Cloudera Enterprise"
        Lifecycle: Production
        AppID: AAAAAA-PR001
        Project: "Analytics Platform as a Service"
    }
    bootstrapScriptsPaths: ["scripts/bootstrap-dns.sh","scripts/bootstrap-misc.sh","scripts/bootstrap-sssd.sh","scripts/bootstrap-java.sh","scripts/bootstrap-jdbc.sh" ]
    bootstrapScripts: [ """#! /usr/bin/env bash
      exit 0
    """]
}

instances {
    master: ${common-instance-properties} {
        type: r4.4xlarge
        placementGroup: cloudera-master-prod
        subnetId: subnet-0eb60957
        securityGroupsIds: "sg-6a360510,sg-1c8c277a,sg-43b82727,sg-2b3bc34f,sg-ba3cc7de"
    }

    worker: ${common-instance-properties} {
        type: r4.2xlarge
        placementGroup: cloudera-worker-prod
        subnetId: subnet-0eb60957
        securityGroupsIds: "sg-6a360510,sg-1c8c277a,sg-43b82727,sg-2b3bc34f,sg-ba3cc7de"
    }

    edge: ${common-instance-properties} {
        type: m5.4xlarge
        subnetId: subnet-01b60958
        securityGroupsIds: "sg-6a360510,sg-453a093f,sg-1c8c277a,sg-43b82727,sg-2b3bc34f,sg-ba3cc7de"
    }

    util: ${common-instance-properties} {
        type: m5.4xlarge
        subnetId: subnet-01b60958
        securityGroupsIds: "sg-6a360510,sg-453a093f,sg-1c8c277a,sg-43b82727,sg-2b3bc34f,sg-ba3cc7de"
    }

    cdsw: ${common-instance-properties} {
        type: m5.4xlarge
        subnetId: subnet-01b60958
        securityGroupsIds: "sg-6a360510,sg-453a093f,sg-1c8c277a,sg-43b82727,sg-2b3bc34f,sg-ba3cc7de"
        normalizationConfig {
             mountAllUnmountedDisks: false
        }
    }
}
databaseServers {

  rds-mysql-prod1 {
    type: ${DB_TYPE}
    user: ${DB_ADMIN}
    password: ${DB_ADMIN_PWD}
    host: ${DB_HOST}
    port: ${DB_PORT}
  }
}
